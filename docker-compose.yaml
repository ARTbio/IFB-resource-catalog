version: '3'

services:

  db:
    build:
      context: ./
      dockerfile: postgres.dockerfile
    volumes:
      - ./db_data:/var/lib/postgresql/data
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: "ifb_user"
      POSTGRES_PASSWORD: "pass"
      POSTGRES_DB: "ifb_catalog"
      PGDATA: /var/lib/postgresql/data/pgdata

  web:
    build:
      context: ./
      dockerfile: django.dockerfile
    restart:
      always
    # command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    command: bash -c "python manage.py makemigrations && python manage.py migrate && gunicorn --reload catalogue.wsgi -b 0.0.0.0:8000"
    environment:
      - PYTHONUNBUFFERED=0
    volumes:
      - .:/code
      - ./database/static:/static
    # ports:
    #   - "8001:8000"
    depends_on:
      - db
    # user: "${UID}:${GID}"
  # The Database manager (adminer)
  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"

  nginx:
    build:
      context: ./
      dockerfile: nginx.dockerfile
    volumes:
      - .:/code
      - ./static:/static
    ports:
      - "8000:8000"
    depends_on:
      - web


volumes:
  db_data:
